name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
            extension: ''
            archive_ext: '.tar.gz'
          - os: windows-latest
            name: windows
            extension: '.exe'
            archive_ext: '.zip'
          - os: macos-latest
            name: macos
            extension: ''
            archive_ext: '.tar.gz'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile --name cw${{ matrix.extension }} code_weave.py

    - name: Create platform archive (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        tar czf cw-${{ github.ref_name }}-${{ matrix.name }}${{ matrix.archive_ext }} -C dist cw${{ matrix.extension }}

    - name: Create platform archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path "dist\cw${{ matrix.extension }}" -DestinationPath "cw-${{ github.ref_name }}-${{ matrix.name }}${{ matrix.archive_ext }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: cw-${{ matrix.name }}${{ matrix.archive_ext }}
        path: cw-${{ github.ref_name }}-${{ matrix.name }}${{ matrix.archive_ext }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: List artifacts
      run: ls -R ./artifacts

    - name: Find and prepare release files
      run: |
        echo "=== 查找所有文件 ==="
        find . -name "*.tar.gz" -o -name "*.zip" | grep -v node_modules | sort
        mkdir -p ./release_files
        find . -name "cw-*.tar.gz" -exec cp {} ./release_files/ \;
        find . -name "cw-*.zip" -exec cp {} ./release_files/ \;
        echo "=== 准备发布的文件 ==="
        ls -la ./release_files/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./artifacts/cw-linux.tar.gz
          ./artifacts/cw-windows.zip
          ./artifacts/cw-macos.tar.gz
        generate_release_notes: true
